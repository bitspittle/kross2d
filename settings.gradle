pluginManagement {
    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == "kotlin-multiplatform") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:${requested.version}")
            }
            else if (requested.id.id == "kotlin2js") {
                useModule("org.jetbrains.kotlin:kotlin-gradle-plugin:${requested.version}")
            }
        }
    }
}

rootProject.name = "kross2d"

include(":kross2d-core")
project(":kross2d-core").name = "kross2d"

// Extras

include(":kross2d-extras-ecs")
project(":kross2d-extras-ecs").name = "kross2d-ecs"

// Examples

def exColorCanvas = ":examples:colorcanvas:colorcanvas"
include("$exColorCanvas-common")
include("$exColorCanvas-jvm")
include("$exColorCanvas-js")

def exSprite = ":examples:sprite:sprite"
include("$exSprite-common")
include("$exSprite-jvm")
include("$exSprite-js")

def exSounds = ":examples:sounds:sounds"
include("$exSounds-common")
include("$exSounds-jvm")
include("$exSounds-js")

def exManyStates = ":examples:manystates:manystates"
include("$exManyStates-common")
include("$exManyStates-jvm")
include("$exManyStates-js")

def exPong = ":examples:pong:pong"
include("$exPong-common")
include("$exPong-jvm")
include("$exPong-js")

enableFeaturePreview("GRADLE_METADATA")
